[{"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/index.js":"1","/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/App.js":"2","/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/reportWebVitals.js":"3","/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Header.js":"4","/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Tasks.js":"5","/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Button.js":"6","/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Task.js":"7","/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/AddTask.js":"8","/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Footer.js":"9","/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/About.js":"10"},{"size":500,"mtime":1647368323085,"results":"11","hashOfConfig":"12"},{"size":2939,"mtime":1647902005283,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1647368323085,"results":"14","hashOfConfig":"12"},{"size":625,"mtime":1647904459015,"results":"15","hashOfConfig":"12"},{"size":306,"mtime":1647899432379,"results":"16","hashOfConfig":"12"},{"size":417,"mtime":1647374470202,"results":"17","hashOfConfig":"12"},{"size":464,"mtime":1647489239481,"results":"18","hashOfConfig":"12"},{"size":1355,"mtime":1647565784877,"results":"19","hashOfConfig":"12"},{"size":182,"mtime":1647904004762,"results":"20","hashOfConfig":"12"},{"size":436,"mtime":1647904267407,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ozi54n",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/index.js",[],[],"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/App.js",["54"],[],"import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Tasks from \"./components/Tasks\";\nimport About from \"./components/About\";\nimport AddTask from \"./components/AddTask\";\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  //Fetch tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:8000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  //Fetch task\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:8000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Add Task\n\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:8000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  // Delete Task\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n\n  const toggleReminder = async (id) => {\nconst taskToToggle = await fetchTask(id)\nconst updTask = { ...taskToToggle,\nreminder: !taskToToggle.reminder}\n\nconst res = await fetch(`http://localhost:8000/tasks/${id}`, {\n  method: \"PUT\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  },\n  body: JSON.stringify(updTask)\n})\n\nconst data = await res.json()\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? (\n                  <Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleReminder}\n                  />\n                ) : (\n                  'No Tasks To Show'\n                )}\n              </>\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  )\n};\n\nexport default App;\n",["55","56"],"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/reportWebVitals.js",[],[],"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Header.js",[],[],"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Tasks.js",[],[],"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Button.js",[],[],"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Task.js",[],[],"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/AddTask.js",[],[],"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/Footer.js",[],[],"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/components/About.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":86,"column":7,"nodeType":"59","messageId":"60","endLine":86,"endColumn":11},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-global-assign","no-unsafe-negation"]