{"ast":null,"code":"var _jsxFileName = \"/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appointment',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting at School',\n    day: 'Feb 6th at 1:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Grocery Shopping',\n    day: 'Feb 5th at 2:30pm',\n    reminder: false\n  }]); // Add Task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([]);\n  }; // Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }, this) : 'No Tasks Added']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VClBJ8Bw+oMm/XJgY5Tt3KXA3+k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/danielloshkarev/Desktop/React Task Tracker/React-task-tracker/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,CACnC;AACGO,IAAAA,EAAE,EAAE,CADP;AAEGC,IAAAA,IAAI,EAAE,qBAFT;AAGGC,IAAAA,GAAG,EAAE,mBAHR;AAIGC,IAAAA,QAAQ,EAAE;AAJb,GADmC,EAOnC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,mBAFV;AAGIC,IAAAA,GAAG,EAAE,mBAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAPmC,EAalC;AACGH,IAAAA,EAAE,EAAE,CADP;AAEGC,IAAAA,IAAI,EAAE,kBAFT;AAGGC,IAAAA,GAAG,EAAE,mBAHR;AAIGC,IAAAA,QAAQ,EAAE;AAJb,GAbkC,CAAD,CAApC,CADgB,CAsBlB;;AAEA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAML,EAAE,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAmC,CAA9C;AACF,UAAMC,OAAO,GAAG;AAAET,MAAAA,EAAF;AAAM,SAAGK;AAAT,KAAhB;AACAN,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACC,GAJD,CAxBkB,CA+BlB;;;AAEA,QAAMW,UAAU,GAAIV,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAjCkB,CAqClB;;;AAEA,QAAMY,cAAc,GAAIZ,EAAD,IAAQ;AAC/BD,IAAAA,QAAQ,CAACD,KAAK,CAACe,GAAN,CAAWR,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGK,IAAL;AAAWF,MAAAA,QAAQ,EAAG,CAACE,IAAI,CAACF;AAA5B,KAAjB,GAA0DE,IAA9E,CAAD,CAAR;AACC,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGN,KAAK,CAACgB,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AAAqB,MAAA,QAAQ,EAAEY,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAA6F,gBAHhG;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOC,CAnDD;;GAAMf,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import {useState} from 'react';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nconst App = () => {\n  const [ tasks, setTasks ] = useState([\n    {\n       id: 1,\n       text: 'Doctors Appointment',\n       day: 'Feb 5th at 2:30pm',\n       reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n     },\n     {\n        id: 3,\n        text: 'Grocery Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n     },\n])\n\n// Add Task\n\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) +1\nconst newTask = { id, ...task }\nsetTasks([])\n}\n\n\n// Delete Task\n\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n// Toggle Reminder\n\nconst toggleReminder = (id) => {\nsetTasks(tasks.map((task) => task.id === id ? { ...task, reminder : !task.reminder } : task))\n}\n\n\nreturn (\n    <div className=\"container\">\n      <Header />\n      <AddTask onAdd={addTask} />\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Tasks Added'}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}